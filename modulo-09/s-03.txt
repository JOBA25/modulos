control_medico@jbadip02> start s-03-merge-views.sql
Enter value for 1: traceonly
conectando con control_medico
Connected.
ejemplo transformacion OR
Generando inidces

Index created.


Index created.


Index created.


Index created.

conectando como control_medico
Connected.
B. concetando como sys

PL/SQL procedure successfully completed.

conectando con control_medico
Connected.
configurando autotrace 'set autotrace '
=== Consulta 1 sin subconsulta

1779 rows selected.


Execution Plan
----------------------------------------------------------
Plan hash value: 1812988965

-----------------------------------------------------------------------------------
| Id  | Operation           | Name        | Rows  | Bytes | Cost (%CPU)| Time     |
-----------------------------------------------------------------------------------
|   0 | SELECT STATEMENT    |             |  2885 |   247K|   121   (1)| 00:00:01 |
|*  1 |  HASH JOIN          |             |  2885 |   247K|   121   (1)| 00:00:01 |
|*  2 |   TABLE ACCESS FULL | MEDICAMENTO |  1768 | 84864 |    68   (0)| 00:00:01 |
|*  3 |   HASH JOIN         |             |  3271 |   127K|    52   (0)| 00:00:01 |
|*  4 |    TABLE ACCESS FULL| CITA        |  2069 | 45518 |    30   (0)| 00:00:01 |
|   5 |    TABLE ACCESS FULL| RECETA      | 20000 |   351K|    22   (0)| 00:00:01 |
-----------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   1 - access("M"."MEDICAMENTO_ID"="R"."MEDICAMENTO_ID")
   2 - filter("M"."SUBCLAVE" LIKE '010%')
   3 - access("R"."CITA_ID"="C"."CITA_ID")
   4 - filter("C"."CONSULTORIO" LIKE 'C-6%')

Note
-----
   - this is an adaptive plan


Statistics
----------------------------------------------------------
          1  recursive calls
          0  db block gets
        490  consistent gets
          0  physical reads
          0  redo size
      99865  bytes sent via SQL*Net to client
       1897  bytes received via SQL*Net from client
        120  SQL*Net roundtrips to/from client
          0  sorts (memory)
          0  sorts (disk)
       1779  rows processed

consulta 2 con subconsulta y con hint no_merge

1779 rows selected.


Execution Plan
----------------------------------------------------------
Plan hash value: 1812988965

-----------------------------------------------------------------------------------
| Id  | Operation           | Name        | Rows  | Bytes | Cost (%CPU)| Time     |
-----------------------------------------------------------------------------------
|   0 | SELECT STATEMENT    |             |  2885 |   247K|   121   (1)| 00:00:01 |
|*  1 |  HASH JOIN          |             |  2885 |   247K|   121   (1)| 00:00:01 |
|*  2 |   TABLE ACCESS FULL | MEDICAMENTO |  1768 | 84864 |    68   (0)| 00:00:01 |
|*  3 |   HASH JOIN         |             |  3271 |   127K|    52   (0)| 00:00:01 |
|*  4 |    TABLE ACCESS FULL| CITA        |  2069 | 45518 |    30   (0)| 00:00:01 |
|   5 |    TABLE ACCESS FULL| RECETA      | 20000 |   351K|    22   (0)| 00:00:01 |
-----------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   1 - access("R"."MEDICAMENTO_ID"="M"."MEDICAMENTO_ID")
   2 - filter("M"."SUBCLAVE" LIKE '010%')
   3 - access("R"."CITA_ID"="C"."CITA_ID")
   4 - filter("C"."CONSULTORIO" LIKE 'C-6%')

Note
-----
   - this is an adaptive plan


Statistics
----------------------------------------------------------
          1  recursive calls
          0  db block gets
        490  consistent gets
          0  physical reads
          0  redo size
      99865  bytes sent via SQL*Net to client
       2041  bytes received via SQL*Net from client
        120  SQL*Net roundtrips to/from client
          0  sorts (memory)
          0  sorts (disk)
       1779  rows processed

consulta 3 con subconsulta y sin hint no_merge

1779 rows selected.


Execution Plan
----------------------------------------------------------
Plan hash value: 1812988965

-----------------------------------------------------------------------------------
| Id  | Operation           | Name        | Rows  | Bytes | Cost (%CPU)| Time     |
-----------------------------------------------------------------------------------
|   0 | SELECT STATEMENT    |             |  2885 |   247K|   121   (1)| 00:00:01 |
|*  1 |  HASH JOIN          |             |  2885 |   247K|   121   (1)| 00:00:01 |
|*  2 |   TABLE ACCESS FULL | MEDICAMENTO |  1768 | 84864 |    68   (0)| 00:00:01 |
|*  3 |   HASH JOIN         |             |  3271 |   127K|    52   (0)| 00:00:01 |
|*  4 |    TABLE ACCESS FULL| CITA        |  2069 | 45518 |    30   (0)| 00:00:01 |
|   5 |    TABLE ACCESS FULL| RECETA      | 20000 |   351K|    22   (0)| 00:00:01 |
-----------------------------------------------------------------------------------

Predicate Information (identified by operation id):
---------------------------------------------------

   1 - access("R"."MEDICAMENTO_ID"="M"."MEDICAMENTO_ID")
   2 - filter("M"."SUBCLAVE" LIKE '010%')
   3 - access("R"."CITA_ID"="C"."CITA_ID")
   4 - filter("C"."CONSULTORIO" LIKE 'C-6%')

Note
-----
   - this is an adaptive plan


Statistics
----------------------------------------------------------
          1  recursive calls
          0  db block gets
        490  consistent gets
          0  physical reads
          0  redo size
      99865  bytes sent via SQL*Net to client
       2000  bytes received via SQL*Net from client
        120  SQL*Net roundtrips to/from client
          0  sorts (memory)
          0  sorts (disk)
       1779  rows processed

eliminando indices

Index dropped.


Index dropped.


Index dropped.


Index dropped.

control_medico@jbadip02> 

****CONCLUSIONES 
****************

¿El ejercicio aportó y/o mejoró la comprensión del concepto ?
con este ejercicio se logró verificar las optimizacviones que hace el manejador, en este 
caso al extraer la subconsulta y utilizarla en el mismo nivel, por los resultados podemos notar que
no hay una gran diferencia entre la query optimizada y la que no en cuestion de tiempo pero podemos 
ver la diferencia en el plan de ejcución.


Problemas identificados durante su elaboración así como la forma en la que se solucionaron
no se tuvo problemas

Comentarios, sugerencias.